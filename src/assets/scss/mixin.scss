@function rem($px) {
    @return $px / 50 + rem
  };
  
  @mixin flex($compony) {
    flex: $compony;
  };
  
  @mixin border {
    content: ' ';
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    width: 200%;
    height: 200%;
    transform: scale(0.5);
    transform-origin: left top;
  };
  
  @mixin ellipsis($line: 1) {
      @if $line > 1 {
          display: -webkit-box;
          overflow: hidden;
          text-overflow: ellipsis;
          -webkit-line-clamp: $line;
          -webkit-box-orient: vertical;
      } @else if $line == 1 {
          white-space: nowrap;
          text-overflow: ellipsis;
          overflow: hidden;
      }
  }
  @mixin hasBorder ($color: #f1f1f1){
    position: relative;
    &::after {
      content: '';
      background: $color;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 1px;
      transform: scaleY(0.5);
    }
  }
  %flex {
    display: -webkit-flex;
    display: -webkit-box;
    display: flex;
  }
  %fl {
    float: left;
  }
  %fr {
    float: right;
  }
  
  %border{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-top:1px solid #ddd;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-top:1px solid #ddd;
            border-bottom:1px solid #ddd;
        }
    }
  }
  %border-top{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-top:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-top:1px solid #ddd;
        }
    }
  }
  %border-bottom{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-bottom:1px solid #ddd;
        }
    }
  }
  %border-left{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-bottom:1px solid #ddd;
        }
    }
  }
  %border-right{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-bottom:1px solid #ddd;
        }
    }
  }
  
  @mixin _prefixDpr($width: 1px, $position: all, $color: #ddd, $radius: 0, $style: solid,  $dpr: 2) {
  @media only screen and (-webkit-min-device-pixel-ratio:$dpr) {
      &:before {
          content: ' ';
          position: absolute;
          @if $position == all {
              left: 0;
          } @else if $position == top {
              left: 0;
          } @else if $position == right{
              right: 0;
          } @else if $position == bottom {
              left: 0;
              bottom: 0;
          } @else if $position == left {
              left: 0;
          }
          top: 0;
          box-sizing: border-box;
          width: $dpr *100%;
          height: $dpr *100%;
          transform: scale(1/$dpr);
          transform-origin: left top;
          @if $position == all {
              border: $width $style $color;
          } @else {
              border-#{$position}: $width $style $color;
          }
          border-radius: $radius * 2;
          pointer-events: none;
          z-index: 1;
      }
  }
  }
  
  @mixin border($position: all, $color: #ddd, $width: 1px,  $radius: 0, $style: solid) {
    position: relative;
    border-radius: $radius;
    @include _prefixDpr($width, $position, $color, $radius, $style, 1);
    @include _prefixDpr($width, $position, $color, $radius, $style, 1.5);
    @include _prefixDpr($width, $position, $color, $radius, $style, 2);
    @include _prefixDpr($width, $position, $color, $radius, $style, 3);
  }
  
  @mixin safe-padding-bottom() {
      padding-bottom: constant(safe-area-inset-bottom);
      padding-bottom: env(safe-area-inset-bottom);
    }
  
    @mixin safe-margin-bottom() {
      margin-bottom: constant(safe-area-inset-bottom);
      margin-bottom: env(safe-area-inset-bottom);
    }
  
    @mixin safe-margin-top() {
      margin-top: constant(safe-area-inset-top);
      margin-top: env(safe-area-inset-top);
    }
  
    @mixin safe-padding-top() {
      padding-top: constant(safe-area-inset-top);
      padding-top: env(safe-area-inset-top);
    }
  